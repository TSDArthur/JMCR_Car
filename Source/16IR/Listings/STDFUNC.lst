C51 COMPILER V9.54   STDFUNC                                                               03/28/2019 15:22:48 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE STDFUNC
OBJECT MODULE PLACED IN .\Objects\STDFUNC.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE LIB\STDFUNC.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\HARDWARE;.\LIB) DE
                    -BUG OBJECTEXTEND CODE NOCOND PRINT(.\Listings\STDFUNC.lst) TABS(2) OBJECT(.\Objects\STDFUNC.obj)

line level    source

   1          /*
   2          ---- STD Functions Module ----
   3          Author: Zhang Muhua
   4          Date: 2019.2.7
   5          ----------------------------
   6          */
   7          #include "STC15.h"
   8          #include "IO.h"
   9          #include "PWM.h"
  10          #include "STDFUNC.h"
  11          
  12          //Delay 1ms for 24Mhz Clock
  13          void delay_ms(unsigned int t)
  14          {
  15   1        unsigned char i, j;
  16   1        while(t--)
  17   1        {
  18   2          i = 30;
  19   2          j = 43;
  20   2          do
  21   2          {
  22   3            while (--j);
  23   3          }
  24   2          while (--i);
  25   2        }
  26   1      }
  27          
  28          //Select the max number
  29          int maxInt(int numA, int numB)
  30          {
  31   1        if(numA > numB)return numA;
  32   1        return numB;
  33   1      }
  34          
  35          //Select the max number
  36          double maxDouble(double numA, double numB)
  37          {
  38   1        if(numA > numB)return numA;
  39   1        return numB;
  40   1      }
  41          
  42          //Select the min number
  43          int minInt(int numA, int numB)
  44          {
  45   1        if(numA < numB)return numA;
  46   1        return numB;
  47   1      }
  48          
  49          //Select the min number
  50          double minDouble(double numA, double numB)
  51          {
  52   1        if(numA < numB)return numA;
  53   1        return numB;
  54   1      }
C51 COMPILER V9.54   STDFUNC                                                               03/28/2019 15:22:48 PAGE 2   

  55          
  56          //abs Int
  57          int absInt(int num)
  58          {
  59   1        return num < 0 ? -1 * num : num;
  60   1      }
  61            
  62          //abs Double
  63          double absDouble(double num)
  64          {
  65   1        return num < 0 ? -1 * num : num;
  66   1      }
C51 COMPILER V9.54   STDFUNC                                                               03/28/2019 15:22:48 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _delay_ms (BEGIN)
                                           ; SOURCE LINE # 13
;---- Variable 't' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 14
0000         ?C0001:
                                           ; SOURCE LINE # 16
0000 EF                MOV     A,R7
0001 1F                DEC     R7
0002 AC06              MOV     R4,AR6
0004 7001              JNZ     ?C0023
0006 1E                DEC     R6
0007         ?C0023:
0007 4C                ORL     A,R4
0008 600A              JZ      ?C0008
                                           ; SOURCE LINE # 17
                                           ; SOURCE LINE # 18
;---- Variable 'i' assigned to Register 'R5' ----
000A 7D1E              MOV     R5,#01EH
                                           ; SOURCE LINE # 19
;---- Variable 'j' assigned to Register 'R4' ----
000C 7C2B              MOV     R4,#02BH
                                           ; SOURCE LINE # 21
000E         ?C0006:
                                           ; SOURCE LINE # 22
000E DCFE              DJNZ    R4,?C0006
0010         ?C0007:
                                           ; SOURCE LINE # 23
0010         ?C0003:
                                           ; SOURCE LINE # 24
0010 DDFC              DJNZ    R5,?C0006
                                           ; SOURCE LINE # 25
0012 80EC              SJMP    ?C0001
                                           ; SOURCE LINE # 26
0014         ?C0008:
0014 22                RET     
             ; FUNCTION _delay_ms (END)

             ; FUNCTION _maxInt (BEGIN)
                                           ; SOURCE LINE # 29
;---- Variable 'numB' assigned to Register 'R4/R5' ----
;---- Variable 'numA' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 30
                                           ; SOURCE LINE # 31
0000 D3                SETB    C
0001 EF                MOV     A,R7
0002 9D                SUBB    A,R5
0003 EC                MOV     A,R4
0004 6480              XRL     A,#080H
0006 F8                MOV     R0,A
0007 EE                MOV     A,R6
0008 6480              XRL     A,#080H
000A 98                SUBB    A,R0
000B 4001              JC      ?C0009
000D 22                RET     
000E         ?C0009:
                                           ; SOURCE LINE # 32
000E AE04              MOV     R6,AR4
0010 AF05              MOV     R7,AR5
                                           ; SOURCE LINE # 33
C51 COMPILER V9.54   STDFUNC                                                               03/28/2019 15:22:48 PAGE 4   

0012         ?C0010:
0012 22                RET     
             ; FUNCTION _maxInt (END)

             ; FUNCTION _maxDouble (BEGIN)
                                           ; SOURCE LINE # 36
0000 900000      R     MOV     DPTR,#numA
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 38
0006 900000      R     MOV     DPTR,#numB
0009 E0                MOVX    A,@DPTR
000A FC                MOV     R4,A
000B A3                INC     DPTR
000C E0                MOVX    A,@DPTR
000D FD                MOV     R5,A
000E A3                INC     DPTR
000F E0                MOVX    A,@DPTR
0010 FE                MOV     R6,A
0011 A3                INC     DPTR
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 900000      R     MOV     DPTR,#numA
0017 E0                MOVX    A,@DPTR
0018 F8                MOV     R0,A
0019 A3                INC     DPTR
001A E0                MOVX    A,@DPTR
001B F9                MOV     R1,A
001C A3                INC     DPTR
001D E0                MOVX    A,@DPTR
001E FA                MOV     R2,A
001F A3                INC     DPTR
0020 E0                MOVX    A,@DPTR
0021 FB                MOV     R3,A
0022 120000      E     LCALL   ?C?FPCMP3
0025 6007              JZ      ?C0011
0027 4005              JC      ?C0011
0029 900000      R     MOV     DPTR,#numA
002C 8003              SJMP    ?C0024
002E         ?C0011:
                                           ; SOURCE LINE # 39
002E 900000      R     MOV     DPTR,#numB
0031         ?C0024:
0031 E0                MOVX    A,@DPTR
0032 FC                MOV     R4,A
0033 A3                INC     DPTR
0034 E0                MOVX    A,@DPTR
0035 FD                MOV     R5,A
0036 A3                INC     DPTR
0037 E0                MOVX    A,@DPTR
0038 FE                MOV     R6,A
0039 A3                INC     DPTR
003A E0                MOVX    A,@DPTR
003B FF                MOV     R7,A
                                           ; SOURCE LINE # 40
003C         ?C0012:
003C 22                RET     
             ; FUNCTION _maxDouble (END)

             ; FUNCTION _minInt (BEGIN)
                                           ; SOURCE LINE # 43
;---- Variable 'numB' assigned to Register 'R4/R5' ----
C51 COMPILER V9.54   STDFUNC                                                               03/28/2019 15:22:48 PAGE 5   

;---- Variable 'numA' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 44
                                           ; SOURCE LINE # 45
0000 C3                CLR     C
0001 EF                MOV     A,R7
0002 9D                SUBB    A,R5
0003 EC                MOV     A,R4
0004 6480              XRL     A,#080H
0006 F8                MOV     R0,A
0007 EE                MOV     A,R6
0008 6480              XRL     A,#080H
000A 98                SUBB    A,R0
000B 5001              JNC     ?C0013
000D 22                RET     
000E         ?C0013:
                                           ; SOURCE LINE # 46
000E AE04              MOV     R6,AR4
0010 AF05              MOV     R7,AR5
                                           ; SOURCE LINE # 47
0012         ?C0014:
0012 22                RET     
             ; FUNCTION _minInt (END)

             ; FUNCTION _minDouble (BEGIN)
                                           ; SOURCE LINE # 50
0000 900000      R     MOV     DPTR,#numA
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 52
0006 900000      R     MOV     DPTR,#numB
0009 E0                MOVX    A,@DPTR
000A FC                MOV     R4,A
000B A3                INC     DPTR
000C E0                MOVX    A,@DPTR
000D FD                MOV     R5,A
000E A3                INC     DPTR
000F E0                MOVX    A,@DPTR
0010 FE                MOV     R6,A
0011 A3                INC     DPTR
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 900000      R     MOV     DPTR,#numA
0017 E0                MOVX    A,@DPTR
0018 F8                MOV     R0,A
0019 A3                INC     DPTR
001A E0                MOVX    A,@DPTR
001B F9                MOV     R1,A
001C A3                INC     DPTR
001D E0                MOVX    A,@DPTR
001E FA                MOV     R2,A
001F A3                INC     DPTR
0020 E0                MOVX    A,@DPTR
0021 FB                MOV     R3,A
0022 120000      E     LCALL   ?C?FPCMP3
0025 5005              JNC     ?C0015
0027 900000      R     MOV     DPTR,#numA
002A 8003              SJMP    ?C0025
002C         ?C0015:
                                           ; SOURCE LINE # 53
002C 900000      R     MOV     DPTR,#numB
002F         ?C0025:
002F E0                MOVX    A,@DPTR
C51 COMPILER V9.54   STDFUNC                                                               03/28/2019 15:22:48 PAGE 6   

0030 FC                MOV     R4,A
0031 A3                INC     DPTR
0032 E0                MOVX    A,@DPTR
0033 FD                MOV     R5,A
0034 A3                INC     DPTR
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
                                           ; SOURCE LINE # 54
003A         ?C0016:
003A 22                RET     
             ; FUNCTION _minDouble (END)

             ; FUNCTION _absInt (BEGIN)
                                           ; SOURCE LINE # 57
;---- Variable 'num' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 58
                                           ; SOURCE LINE # 59
0000 C3                CLR     C
0001 EE                MOV     A,R6
0002 6480              XRL     A,#080H
0004 9480              SUBB    A,#080H
0006 5009              JNC     ?C0017
0008 7CFF              MOV     R4,#0FFH
000A 7DFF              MOV     R5,#0FFH
000C 120000      E     LCALL   ?C?IMUL
000F 8000              SJMP    ?C0018
0011         ?C0017:
0011         ?C0018:
                                           ; SOURCE LINE # 60
0011         ?C0019:
0011 22                RET     
             ; FUNCTION _absInt (END)

             ; FUNCTION _absDouble (BEGIN)
                                           ; SOURCE LINE # 63
0000 900000      R     MOV     DPTR,#num
0003 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 65
0006 E4                CLR     A
0007 FF                MOV     R7,A
0008 FE                MOV     R6,A
0009 FD                MOV     R5,A
000A FC                MOV     R4,A
000B 900000      R     MOV     DPTR,#num
000E E0                MOVX    A,@DPTR
000F F8                MOV     R0,A
0010 A3                INC     DPTR
0011 E0                MOVX    A,@DPTR
0012 F9                MOV     R1,A
0013 A3                INC     DPTR
0014 E0                MOVX    A,@DPTR
0015 FA                MOV     R2,A
0016 A3                INC     DPTR
0017 E0                MOVX    A,@DPTR
0018 FB                MOV     R3,A
0019 120000      E     LCALL   ?C?FPCMP3
001C 501A              JNC     ?C0020
001E E4                CLR     A
C51 COMPILER V9.54   STDFUNC                                                               03/28/2019 15:22:48 PAGE 7   

001F FF                MOV     R7,A
0020 FE                MOV     R6,A
0021 7D80              MOV     R5,#080H
0023 7CBF              MOV     R4,#0BFH
0025 900000      R     MOV     DPTR,#num
0028 E0                MOVX    A,@DPTR
0029 F8                MOV     R0,A
002A A3                INC     DPTR
002B E0                MOVX    A,@DPTR
002C F9                MOV     R1,A
002D A3                INC     DPTR
002E E0                MOVX    A,@DPTR
002F FA                MOV     R2,A
0030 A3                INC     DPTR
0031 E0                MOVX    A,@DPTR
0032 FB                MOV     R3,A
0033 120000      E     LCALL   ?C?FPMUL
0036 800E              SJMP    ?C0021
0038         ?C0020:
0038 900000      R     MOV     DPTR,#num
003B E0                MOVX    A,@DPTR
003C FC                MOV     R4,A
003D A3                INC     DPTR
003E E0                MOVX    A,@DPTR
003F FD                MOV     R5,A
0040 A3                INC     DPTR
0041 E0                MOVX    A,@DPTR
0042 FE                MOV     R6,A
0043 A3                INC     DPTR
0044 E0                MOVX    A,@DPTR
0045 FF                MOV     R7,A
0046         ?C0021:
                                           ; SOURCE LINE # 66
0046         ?C0022:
0046 22                RET     
             ; FUNCTION _absDouble (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    268    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      20
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
